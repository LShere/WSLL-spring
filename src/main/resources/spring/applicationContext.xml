<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

    <!--    <aop:aspectj-autoproxy/>-->

    <!--    <spring.pojo id="testAop" class="spring.aspect.spring.aspect"/>-->
    <!--    <aop:config>-->
    <!--        <aop:spring.aspect id="myAspect" ref="testAop">-->
    <!--            <aop:pointcut expression="execution(* auto.spring.service.*.*(..))" id="myPointcut"/>-->
    <!--            <aop:before method="before" pointcut-ref="myPointcut"/>-->
    <!--            <aop:after method="after" pointcut-ref="myPointcut"/>-->
    <!--            <aop:around method="around" pointcut-ref="myPointcut"/>-->
    <!--        </aop:spring.aspect>-->
    <!--    </aop:config>-->

    <!--JDBC-->
    <context:property-placeholder location="classpath:db.properties"/>
    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
    <!--    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">-->
    <!--        <property name="dataSource" ref="dataSource"/>-->
    <!--    </bean>-->

    <!--事务-->
    <!--    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
    <!--        <property name="dataSource" ref="dataSource"/>-->
    <!--    </bean>-->
    <!--    <tx:advice id="txAdvice" transaction-manager="transactionManager">-->
    <!--        <tx:attributes>-->
    <!--            &lt;!&ndash;            <tx:method name="*" isolation="DEFAULT" propagation="REQUIRED" read-only="false"/>&ndash;&gt;-->
    <!--            <tx:method name="transferAccounts" isolation="DEFAULT" propagation="REQUIRED" read-only="false"/>-->
    <!--        </tx:attributes>-->
    <!--    </tx:advice>-->
    <!--    <aop:config>-->
    <!--        <aop:pointcut expression="execution(* spring.dao.*.*(..))" id="myPointcut"/>-->
    <!--        <aop:advisor advice-ref="txAdvice" pointcut-ref="myPointcut"/>-->
    <!--    </aop:config>-->

    <!--事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--开启事务注解-->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <!--配置MyBatis工厂-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:Mybatis-config.xml"/>
         <property name="mapperLocations" value="classpath:mapper/UserDao.xml"/>
    </bean>
    <!--Mapper代理开发（基于MapperScannerConfigurer）-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="spring.dao"/>
    </bean>
    <!--注解扫描-->
    <context:component-scan base-package="spring.*"/>


</beans>