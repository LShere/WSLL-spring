<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="spring.dao.GoodsDao">
    <resultMap id="goods" type="spring.pojo.Goods">
<!--        <id property="goods_id" column="goods_id"/>
        <result property="goods_type" column="goods_type"/>
        <result property="goods_name" column="goods_name"/>
        <result property="goods_describe" column="goods_describe"/>
        <result property="goods_price" column="goods_price"/>
        <result property="goods_enable" column="goods_enable"/>
        <result property="goods_browse" column="goods_browse"/>
        <result property="goods_buy" column="goods_buy"/>
        <result property="goods_picture_path" column="goods_picture_path"/>
        <result property="goods_create_time" column="goods_create_time"/>
        <association property="goodsType" javaType="spring.pojo.GoodsType">
            <id property="type" column="type_id"/>
            <result property="type_name" column="type_name"/>
         </association>-->
    </resultMap>

    <select id="findAllGoods" resultMap="goods">
		select goods_id,
        goods_type,
        goods_name,
        goods_describe,
        goods_price,
        goods_enable,
        goods_browse,
        goods_buy,
        goods_picture_path,
        goods_create_time
		from goods
	</select>

    <!--分页查询-->
    <select id="findGoodsPage" resultMap="goods" parameterType="Map">
        select g.goods_id,
        t.type_name as goods_type,
        g.goods_name,
        g.goods_describe,
        g.goods_price,
        g.goods_enable,
        g.goods_browse,
        g.goods_buy,
        g.goods_picture_path,
        g.goods_create_time
        from goods g
        left join (select type_id,type_name from g_type
        ) t
        on (g.goods_type=t.type_id)
        <where>
            <if test="goods_type!=null and goods_type!=''">
                g.goods_type = #{goods_type}
            </if>
            <if test="goods_name!=null and goods_name!=''">
                and goods_name like "%"#{goods_name}"%"
            </if>
            <if test="goods_describe!=null and goods_describe!=''">
                and goods_describe like "%"#{goods_describe}"%"
            </if>
        </where>
    </select>

    <!--查询所有商品信息-->
    <select id="findGoods" resultMap="goods" parameterType="Map">
        select g.goods_id,
        t.type_name as goods_type,
        g.goods_name,
        g.goods_describe,
        g.goods_price,
        g.goods_enable,
        g.goods_browse,
        g.goods_buy,
        g.goods_picture_path,
        g.goods_create_time
        from goods g
        left join (select type_id,type_name from g_type
        ) t
        on g.goods_type=t.type_id
        <where>
            <if test="goods_type!=null and goods_type!=''">
                g.goods_type = #{goods_type}
            </if>
            <if test="goods_name!=null and goods_name!=''">
                and goods_name like "%"#{goods_name}"%"
            </if>
            <if test="goods_describe!=null and goods_describe!=''">
                and goods_describe like "%"#{goods_describe}"%"
            </if>
        </where>
    </select>

    <select id="countGoods" resultType="int">
        select count(*) from goods
    </select>

    <!--根据id查询商品信息-->
    <select id="findGoodsById" resultMap="goods" parameterType="int">
        select goods_id,
        goods_type,
        goods_name,
        goods_describe,
        goods_price,
        goods_enable,
        goods_browse,
        goods_buy,
        goods_picture_path,
        goods_create_time
		from goods
		where goods_id=#{id}
    </select>

    <!--随机返回商品的信息-->
    <select id="findGoodsByRand" parameterType="int" resultMap="goods">
        SELECT goods_id,
        goods_type,
        goods_name,
        goods_describe,
        goods_price,
        goods_enable,
        goods_browse,
        goods_buy,
        goods_picture_path,
        goods_create_time
        FROM `goods`
        WHERE goods_id >= (SELECT floor(RAND() * (SELECT MAX(goods_id) FROM `goods`)))
        ORDER BY goods_id LIMIT #{num}
    </select>

    <!--查询商品表信息 选择商品的添加时间最晚的记录-->
    <select id="findNewGoods" parameterType="int" resultMap="goods">
        SELECT goods_id,
        goods_type,
        goods_name,
        goods_describe,
        goods_price,
        goods_enable,
        goods_browse,
        goods_buy,
        goods_picture_path,
        goods_create_time
        FROM goods
		order by goods_create_time desc limit #{n}
    </select>

    <!--插入商品表-->
    <insert id="addGoods" parameterType="goods">
        insert INTO
        goods(
        goods_type,
        goods_name,
        goods_describe,
        goods_price,
        goods_enable,
        goods_browse,
        goods_buy,
        goods_picture_path,
        goods_create_time
        )
        values(
        #{goods_type},
        #{goods_name},
        #{goods_describe},
        #{goods_price},
        #{goods_enable},
        #{goods_browse},
        #{goods_buy},
        #{goods_picture_path},
        #{goods_create_time}
        )

    </insert>

    <!--更新商品表-->
    <update id="updateGoods" parameterType="goods">

        update goods

        set
        goods_type=#{goods_type},
        goods_name=#{goods_name},
        goods_describe=#{goods_describe},
        goods_price=#{goods_price},
        goods_enable=#{goods_enable},
        goods_browse=#{goods_browse},
        goods_buy=#{goods_buy},
        goods_picture_path=#{goods_picture_path},
        goods_create_time=#{goods_create_time}

        where goods_id=${goods_id}

    </update>

    <!--根据商品表id删除商品信息-->
    <delete id="deleteGoodsById" parameterType="int">
        delete from goods where goods_id=#{goods_id}
    </delete>

</mapper>
